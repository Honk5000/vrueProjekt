//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

[RequireComponent(typeof(AudioSource))]
public class InstrumentController : UserManagementObjectController
{
	private AudioSource audioSourceComponent;
	public void Start() {
		audioSourceComponent = this.GetComponent<AudioSource>();
	}
	public InstrumentController ()
	{
	}
	private bool _playing;
	public bool playing {
		get {
			return _playing;
		}
		set {
			_playing = value;
			if (value) {
				//startPlaying();
				networkView.RPC ("startPlayingRPC", RPCMode.All);

			}
			else {
				//stopPlaying ();
				networkView.RPC ("stopPlayingRPC", RPCMode.All);
			}
		}
	}

	public bool isSelected = false;
	public float pitchThreshold = 40f;
	public float pitchSpeed = 0.5f;

	public void SelectObject()
	{
		Debug.Log ("Lets go RPC! select");
		//RPC call to the client
		networkView.RPC ("SelectObjectRPC", RPCMode.All);
	}

	public void DeselectObject()
	{
		Debug.Log ("Lets go RPC! deselect");
		//RPC call to the client
		networkView.RPC ("DeselectObjectRPC", RPCMode.All);
	}

	[RPC]
	public void SelectObjectRPC()
	{
		Debug.Log ("RPC! select");
		isSelected = true;
	}

	[RPC]
	public void DeselectObjectRPC()
	{
		Debug.Log ("RPC! deselect");
		isSelected = false;
	}


	[RPC]
	public void startPlayingRPC() {
		audioSourceComponent.Play();
		this.setAccessGrantedName ("player1");
	} 
	[RPC]
	public void stopPlayingRPC() {
		audioSourceComponent.Stop();
		this.setAccessGrantedName ("player2");
	} 

	public void Update()
	{
		if(isSelected && Network.isClient)
		{
			//change the pitch according to the SpaceMouse y Axis rotation
			GameObject sp = GameObject.Find("Spacemouse");
			if (sp.transform.rotation.y > pitchThreshold && sp.transform.rotation.y < 180f)
			{
				//higher pitch!
				audioSourceComponent.pitch += pitchSpeed * Time.deltaTime;
			}
			if(sp.transform.rotation.y < 360f-pitchThreshold && sp.transform.rotation.y > 180f)
			{
				//lower pitch!
				audioSourceComponent.pitch -= pitchSpeed * Time.deltaTime;
			}
		}
	}

}


